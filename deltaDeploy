#!/bin/bash

#to read the value from .env file
targetOrg=$1

if [ -z "$targetOrg" ]; then
echo "Please, specify the target org alias"
read -p "Target org alias? " targetOrg
fi

source ".deltaPackage/.deployDelta.$targetOrg.env"

if [ -z "$LAST_SUCCESS_DEPLOYMENT_HASH" ]; then
echo "Please, specify the target branch"
read -p "Target branch name? " name
sourceCommit=$(git log -n 1 --pretty=format:"%H" $name)
else
sourceCommit=$LAST_SUCCESS_DEPLOYMENT_HASH
fi

if [ -z "$sourceCommit" ]; then echo "Branch not found"; exit 1; fi

echo "the last commit to compare hash is: " $sourceCommit

currentCommit=$(git log -n 1 --pretty=format:"%H")

echo "the current commit hash is: " $currentCommit

echo "Generating the diffs package"

if [[ ! -e ".deltaPackage" ]]; then mkdir .deltaPackage; fi

git diff --name-only $sourceCommit --diff-filter=AMRT | paste -d, -s - | xargs -0 sf project convert source --output-dir ".deltaPackage" --source-dir

echo "package.xml file updated"

deployToDefault="y"

echo "Deploying changes to target=$targetOrg"
echo "running command: sf project deploy start --manifest .deltaPackage/package.xml --target-org $targetOrg"


sf project deploy start --manifest .deltaPackage/package.xml --target-org $targetOrg


#reading the exit code for the last command
if [ "$?" -ne "0" ]; then
    echo -e "$RED_TEXT----> Deployment to $targetOrg FAILED."
    exit 1
fi
echo -e "$GREEN_TEXT----> Deployment to $targetOrg successful. Updating the last commit hash in .deployDelta file."

#updating the last commit hash in .deployDelta file
echo "LAST_SUCCESS_DEPLOYMENT_HASH=$currentCommit" > ".deltaPackage/.deployDelta.$targetOrg.env"
exit 1






